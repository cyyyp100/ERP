{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cypri\\\\Desktop\\\\Ecole\\\\ingenieur_logiciel\\\\API_JJ\\\\API\\\\Front\\\\src\\\\components\\\\PagePrestataires.js\";\n// /mnt/data/PagePrestataires.js\n\nimport React, { useState, useEffect } from 'react';\nfunction PagePrestataires() {\n  const [prestataires, setPrestataires] = useState([]);\n  const [selectedPrestataires, setSelectedPrestataires] = useState({});\n  const [editForm, setEditForm] = useState({\n    visible: false,\n    data: {}\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchPrestataires();\n  }, []);\n  const fetchPrestataires = (search = '') => {\n    const url = `http://localhost:3001/api/prestataires${search ? `?name=${search}` : ''}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setPrestataires(data);\n      setSelectedPrestataires({});\n    }).catch(error => console.error('Erreur lors de la récupération des prestataires:', error));\n  };\n  const handleCheckboxChange = id => {\n    setSelectedPrestataires(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleDelete = () => {\n    Object.keys(selectedPrestataires).forEach(id => {\n      if (selectedPrestataires[id]) {\n        fetch(`http://localhost:3001/api/prestataires/${id}`, {\n          method: 'DELETE'\n        }).then(() => fetchPrestataires()) // Refresh list after deletion\n        .catch(error => console.error('Erreur lors de la suppression du prestataire:', error));\n      }\n    });\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleSearch = () => {\n    fetchPrestataires(searchTerm);\n  };\n  const showEditForm = prestataire => {\n    setEditForm({\n      visible: true,\n      data: prestataire\n    });\n  };\n  const handleEditChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditForm(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        [name]: value\n      }\n    }));\n  };\n  const handleEditSubmit = event => {\n    event.preventDefault();\n    const {\n      id,\n      name,\n      prix,\n      cout,\n      contact\n    } = editForm.data;\n    fetch(`http://localhost:3001/api/prestataires/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        prix,\n        cout,\n        contact\n      })\n    }).then(() => {\n      fetchPrestataires(); // Refresh list after update\n      setEditForm({\n        visible: false,\n        data: {}\n      });\n    }).catch(error => console.error('Erreur lors de la modification du prestataire:', error));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Liste des Prestataires\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Rechercher par nom\",\n    value: searchTerm,\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Rechercher\"), prestataires.filter(prestataire => prestataire.name.toLowerCase().includes(searchTerm.toLowerCase())).map(prestataire => /*#__PURE__*/React.createElement(\"div\", {\n    key: prestataire.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: !!selectedPrestataires[prestataire.id],\n    onChange: () => handleCheckboxChange(prestataire.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), prestataire.name, \" - Prix: \", prestataire.prix, \" \\u20AC, Co\\xFBt: \", prestataire.cout, \" \\u20AC, Contact: \", prestataire.contact, selectedPrestataires[prestataire.id] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => showEditForm(prestataire),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Modifier\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"Supprimer\")), editForm.visible && editForm.data.id === prestataire.id && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleEditSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Nom: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: editForm.data.name,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 34\n    }\n  }), \"Prix: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"prix\",\n    value: editForm.data.prix,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 35\n    }\n  }), \"Co\\xFBt: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"cout\",\n    value: editForm.data.cout,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 35\n    }\n  }), \"Contact: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"contact\",\n    value: editForm.data.contact,\n    onChange: handleEditChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Enregistrer les modifications\")))));\n}\nexport default PagePrestataires;","map":{"version":3,"names":["React","useState","useEffect","PagePrestataires","prestataires","setPrestataires","selectedPrestataires","setSelectedPrestataires","editForm","setEditForm","visible","data","searchTerm","setSearchTerm","fetchPrestataires","search","url","fetch","then","response","json","catch","error","console","handleCheckboxChange","id","prev","handleDelete","Object","keys","forEach","method","handleSearchChange","event","target","value","handleSearch","showEditForm","prestataire","handleEditChange","name","handleEditSubmit","preventDefault","prix","cout","contact","headers","body","JSON","stringify","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","filter","toLowerCase","includes","map","key","checked","Fragment","onSubmit"],"sources":["C:/Users/cypri/Desktop/Ecole/ingenieur_logiciel/API_JJ/API/Front/src/components/PagePrestataires.js"],"sourcesContent":["// /mnt/data/PagePrestataires.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction PagePrestataires() {\r\n    const [prestataires, setPrestataires] = useState([]);\r\n    const [selectedPrestataires, setSelectedPrestataires] = useState({});\r\n    const [editForm, setEditForm] = useState({ visible: false, data: {} });\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchPrestataires();\r\n    }, []);\r\n\r\n    const fetchPrestataires = (search = '') => {\r\n        const url = `http://localhost:3001/api/prestataires${search ? `?name=${search}` : ''}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setPrestataires(data);\r\n                setSelectedPrestataires({});\r\n            })\r\n            .catch(error => console.error('Erreur lors de la récupération des prestataires:', error));\r\n    };\r\n\r\n    const handleCheckboxChange = (id) => {\r\n        setSelectedPrestataires(prev => ({\r\n            ...prev,\r\n            [id]: !prev[id]\r\n        }));\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        Object.keys(selectedPrestataires).forEach(id => {\r\n            if (selectedPrestataires[id]) {\r\n                fetch(`http://localhost:3001/api/prestataires/${id}`, { method: 'DELETE' })\r\n                    .then(() => fetchPrestataires()) // Refresh list after deletion\r\n                    .catch(error => console.error('Erreur lors de la suppression du prestataire:', error));\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleSearch = () => {\r\n        fetchPrestataires(searchTerm);\r\n    };\r\n\r\n    const showEditForm = (prestataire) => {\r\n        setEditForm({ visible: true, data: prestataire });\r\n    };\r\n\r\n    const handleEditChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setEditForm(prev => ({\r\n            ...prev,\r\n            data: { ...prev.data, [name]: value }\r\n        }));\r\n    };\r\n\r\n    const handleEditSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { id, name, prix, cout, contact } = editForm.data;\r\n        fetch(`http://localhost:3001/api/prestataires/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name, prix, cout, contact })\r\n        })\r\n        .then(() => {\r\n            fetchPrestataires(); // Refresh list after update\r\n            setEditForm({ visible: false, data: {} });\r\n        })\r\n        .catch(error => console.error('Erreur lors de la modification du prestataire:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Liste des Prestataires</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher par nom\"\r\n                value={searchTerm}\r\n                onChange={handleSearchChange}\r\n            />\r\n            <button onClick={handleSearch}>Rechercher</button>\r\n            {prestataires.filter(prestataire => prestataire.name.toLowerCase().includes(searchTerm.toLowerCase())).map(prestataire => (\r\n                <div key={prestataire.id}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={!!selectedPrestataires[prestataire.id]}\r\n                        onChange={() => handleCheckboxChange(prestataire.id)}\r\n                    />\r\n                    {prestataire.name} - Prix: {prestataire.prix} €, Coût: {prestataire.cout} €, Contact: {prestataire.contact}\r\n                    {selectedPrestataires[prestataire.id] && (\r\n                        <>\r\n                            <button onClick={() => showEditForm(prestataire)}>Modifier</button>\r\n                            <button onClick={handleDelete}>Supprimer</button>\r\n                        </>\r\n                    )}\r\n                    {editForm.visible && editForm.data.id === prestataire.id && (\r\n                        <form onSubmit={handleEditSubmit}>\r\n                            Nom: <input type=\"text\" name=\"name\" value={editForm.data.name} onChange={handleEditChange} />\r\n                            Prix: <input type=\"number\" name=\"prix\" value={editForm.data.prix} onChange={handleEditChange} />\r\n                            Coût: <input type=\"number\" name=\"cout\" value={editForm.data.cout} onChange={handleEditChange} />\r\n                            Contact: <input type=\"text\" name=\"contact\" value={editForm.data.contact} onChange={handleEditChange} />\r\n                            <button type=\"submit\">Enregistrer les modifications</button>\r\n                        </form>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PagePrestataires;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}